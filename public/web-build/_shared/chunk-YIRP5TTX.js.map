{
  "version": 3,
  "sources": ["../../../styled-system/jsx/factory.js", "../../../styled-system/css/cx.js", "../../../styled-system/css/cva.js", "../../../styled-system/jsx/is-valid-prop.js", "../../../styled-system/jsx/factory-helper.js", "../../../app/components/component.tsx", "../../../app/components/button.tsx"],
  "sourcesContent": ["import { createElement, forwardRef, useMemo } from 'react'\nimport { css, cx, cva } from '../css/index.js';\nimport { defaultShouldForwardProp, composeShouldForwardProps, composeCvaFn, getDisplayName } from './factory-helper.js';\nimport { splitProps, normalizeHTMLProps } from '../helpers.js';\nimport { isCssProperty } from './is-valid-prop.js';\n\nfunction styledFn(Dynamic, configOrCva = {}, options = {}) {\n  const cvaFn = configOrCva.__cva__ || configOrCva.__recipe__ ? configOrCva : cva(configOrCva)\n\n  const forwardFn = options.shouldForwardProp || defaultShouldForwardProp\n  const shouldForwardProp = (prop) => forwardFn(prop, cvaFn.variantKeys)\n\n  const defaultProps = Object.assign(\n    options.dataAttr && configOrCva.__name__ ? { 'data-recipe': configOrCva.__name__ } : {},\n    options.defaultProps,\n  )\n\n  const StyledComponent = /* @__PURE__ */ forwardRef(function StyledComponent(props, ref) {\n    const { as: Element = Dynamic.__base__ || Dynamic, children, ...restProps } = props\n\n    const __cvaFn__ = composeCvaFn(Dynamic.__cva__, cvaFn)\n    const __shouldForwardProps__ = composeShouldForwardProps(Dynamic, shouldForwardProp)\n\n    const combinedProps = useMemo(() => Object.assign({}, defaultProps, restProps), [restProps])\n\n    const [htmlProps, forwardedProps, variantProps, styleProps, elementProps] = useMemo(() => {\n      return splitProps(combinedProps, normalizeHTMLProps.keys, __shouldForwardProps__, __cvaFn__.variantKeys, isCssProperty)\n    }, [combinedProps])\n\n    function recipeClass() {\n      const { css: cssStyles, ...propStyles } = styleProps\n      const compoundVariantStyles = __cvaFn__.__getCompoundVariantCss__?.(variantProps)\n      return cx(__cvaFn__(variantProps, false), css(compoundVariantStyles, propStyles, cssStyles), combinedProps.className)\n    }\n\n    function cvaClass() {\n      const { css: cssStyles, ...propStyles } = styleProps\n      const cvaStyles = __cvaFn__.raw(variantProps)\n      return cx(css(cvaStyles, propStyles, cssStyles), combinedProps.className)\n    }\n\n    const classes = configOrCva.__recipe__ ? recipeClass : cvaClass\n\n    return createElement(Element, {\n      ref,\n      ...forwardedProps,\n      ...elementProps,\n      ...normalizeHTMLProps(htmlProps),\n      className: classes(),\n    }, combinedProps.children ?? children)\n  })\n\n  const name = getDisplayName(Dynamic)\n\n  StyledComponent.displayName = `styled.${name}`\n  StyledComponent.__cva__ = cvaFn\n  StyledComponent.__base__ = Dynamic\n  StyledComponent.__shouldForwardProps__ = shouldForwardProp\n\n  return StyledComponent\n}\n\nfunction createJsxFactory() {\n  const cache = new Map()\n\n  return new Proxy(styledFn, {\n    apply(_, __, args) {\n      return styledFn(...args)\n    },\n    get(_, el) {\n      if (!cache.has(el)) {\n        cache.set(el, styledFn(el))\n      }\n      return cache.get(el)\n    },\n  })\n}\n\nexport const styled = /* @__PURE__ */ createJsxFactory()\n", "function cx() {\n  let str = '',\n    i = 0,\n    arg\n\n  for (; i < arguments.length; ) {\n    if ((arg = arguments[i++]) && typeof arg === 'string') {\n      str && (str += ' ')\n      str += arg\n    }\n  }\n  return str\n}\n\nexport { cx }", "import { compact, mergeProps, splitProps, uniq } from '../helpers.js';\nimport { css, mergeCss } from './css.js';\n\nconst defaults = (conf) => ({\n  base: {},\n  variants: {},\n  defaultVariants: {},\n  compoundVariants: [],\n  ...conf\n});\n\nexport function cva(config) {\n  const { base, variants, defaultVariants, compoundVariants } = defaults(config);\n\n  function resolve(props = {}) {\n    const computedVariants = { ...defaultVariants, ...compact(props) };\n    let variantCss = { ...base };\n    for (const [key, value] of Object.entries(computedVariants)) {\n      if (variants[key]?.[value]) {\n        variantCss = mergeCss(variantCss, variants[key][value]);\n      }\n    }\n    const compoundVariantCss = getCompoundVariantCss(compoundVariants, computedVariants);\n    return mergeCss(variantCss, compoundVariantCss);\n  }\n\n  function merge(__cva) {\n    const override = defaults(__cva.config);\n    const variantKeys = uniq(__cva.variantKeys, Object.keys(variants));\n    return cva({\n      base: mergeCss(base, override.base),\n      variants: Object.fromEntries(\n        variantKeys.map((key) => [key, mergeCss(variants[key], override.variants[key])])\n      ),\n      defaultVariants: mergeProps(defaultVariants, override.defaultVariants),\n      compoundVariants: [...compoundVariants, ...override.compoundVariants]\n    });\n  }\n\n  function cvaFn(props) {\n    return css(resolve(props));\n  }\n\n  const variantKeys = Object.keys(variants);\n\n  function splitVariantProps(props) {\n    return splitProps(props, variantKeys);\n  }\n\n  const variantMap = Object.fromEntries(Object.entries(variants).map(([key, value]) => [key, Object.keys(value)]));\n\n  return Object.assign(cvaFn, {\n    __cva__: true,\n    variantMap,\n    variantKeys,\n    raw: resolve,\n    config,\n    merge,\n    splitVariantProps\n  });\n}\n\nexport function getCompoundVariantCss(compoundVariants, variantMap) {\n  let result = {};\n  compoundVariants.forEach((compoundVariant) => {\n    const isMatching = Object.entries(compoundVariant).every(([key, value]) => {\n      if (key === 'css') return true;\n\n      const values = Array.isArray(value) ? value : [value];\n      return values.some((value) => variantMap[key] === value);\n    });\n\n    if (isMatching) {\n      result = mergeCss(result, compoundVariant.css);\n    }\n  });\n\n  return result;\n}\n\nexport function assertCompoundVariant(name, compoundVariants, variants, prop) {\n  if (compoundVariants.length > 0 && typeof variants?.[prop] === 'object') {\n    throw new Error(`[recipe:${name}:${prop}] Conditions are not supported when using compound variants.`);\n  }\n}", "import { splitProps } from '../helpers.js';\nimport { memo } from '../helpers.js';\n// src/index.ts\nvar userGeneratedStr = \"css,pos,insetEnd,end,insetStart,start,flexDir,p,pl,pr,pt,pb,py,paddingY,paddingX,px,pe,paddingEnd,ps,paddingStart,ml,mr,mt,mb,m,my,marginY,mx,marginX,me,marginEnd,ms,marginStart,ringWidth,ringColor,ring,ringOffset,w,minW,maxW,h,minH,maxH,bgPosition,bgPositionX,bgPositionY,bgAttachment,bgClip,bg,bgColor,bgOrigin,bgImage,bgRepeat,bgBlendMode,bgSize,bgGradient,rounded,roundedTopLeft,roundedTopRight,roundedBottomRight,roundedBottomLeft,roundedTop,roundedRight,roundedBottom,roundedLeft,roundedStartStart,roundedStartEnd,roundedStart,roundedEndStart,roundedEndEnd,roundedEnd,borderX,borderXWidth,borderXColor,borderY,borderYWidth,borderYColor,borderStart,borderStartWidth,borderStartColor,borderEnd,borderEndWidth,borderEndColor,shadow,shadowColor,x,y,aspectRatio,boxDecorationBreak,zIndex,boxSizing,objectPosition,objectFit,overscrollBehavior,overscrollBehaviorX,overscrollBehaviorY,position,top,left,insetInline,insetBlock,inset,insetBlockEnd,insetBlockStart,insetInlineEnd,insetInlineStart,right,bottom,insetX,insetY,float,visibility,display,hideFrom,hideBelow,flexBasis,flex,flexDirection,flexGrow,flexShrink,gridTemplateColumns,gridTemplateRows,gridColumn,gridRow,gridColumnStart,gridColumnEnd,gridAutoFlow,gridAutoColumns,gridAutoRows,gap,gridGap,gridRowGap,gridColumnGap,rowGap,columnGap,justifyContent,alignContent,alignItems,alignSelf,padding,paddingLeft,paddingRight,paddingTop,paddingBottom,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingInline,paddingInlineEnd,paddingInlineStart,marginLeft,marginRight,marginTop,marginBottom,margin,marginBlock,marginBlockEnd,marginBlockStart,marginInline,marginInlineEnd,marginInlineStart,outlineWidth,outlineColor,outline,outlineOffset,divideX,divideY,divideColor,divideStyle,width,inlineSize,minWidth,minInlineSize,maxWidth,maxInlineSize,height,blockSize,minHeight,minBlockSize,maxHeight,maxBlockSize,color,fontFamily,fontSize,fontWeight,fontSmoothing,fontVariantNumeric,letterSpacing,lineHeight,textAlign,textDecoration,textDecorationColor,textEmphasisColor,textDecorationStyle,textDecorationThickness,textUnderlineOffset,textTransform,textIndent,textShadow,textOverflow,verticalAlign,wordBreak,textWrap,truncate,lineClamp,listStyleType,listStylePosition,listStyleImage,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundAttachment,backgroundClip,background,backgroundColor,backgroundOrigin,backgroundImage,backgroundRepeat,backgroundBlendMode,backgroundSize,backgroundGradient,textGradient,gradientFrom,gradientTo,gradientVia,borderRadius,borderTopLeftRadius,borderTopRightRadius,borderBottomRightRadius,borderBottomLeftRadius,borderTopRadius,borderRightRadius,borderBottomRadius,borderLeftRadius,borderStartStartRadius,borderStartEndRadius,borderStartRadius,borderEndStartRadius,borderEndEndRadius,borderEndRadius,border,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,borderColor,borderInline,borderInlineWidth,borderInlineColor,borderBlock,borderBlockWidth,borderBlockColor,borderLeft,borderLeftColor,borderInlineStart,borderInlineStartWidth,borderInlineStartColor,borderRight,borderRightColor,borderInlineEnd,borderInlineEndWidth,borderInlineEndColor,borderTop,borderTopColor,borderBottom,borderBottomColor,borderBlockEnd,borderBlockEndColor,borderBlockStart,borderBlockStartColor,opacity,boxShadow,boxShadowColor,mixBlendMode,filter,brightness,contrast,grayscale,hueRotate,invert,saturate,sepia,dropShadow,blur,backdropFilter,backdropBlur,backdropBrightness,backdropContrast,backdropGrayscale,backdropHueRotate,backdropInvert,backdropOpacity,backdropSaturate,backdropSepia,borderCollapse,borderSpacing,borderSpacingX,borderSpacingY,tableLayout,transitionTimingFunction,transitionDelay,transitionDuration,transitionProperty,transition,animation,animationName,animationDelay,transformOrigin,scale,scaleX,scaleY,translate,translateX,translateY,accentColor,caretColor,scrollBehavior,scrollbar,scrollMargin,scrollMarginX,scrollMarginY,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollMarginBottom,scrollMarginBlock,scrollMarginBlockEnd,scrollMarginBlockStart,scrollMarginInline,scrollMarginInlineEnd,scrollMarginInlineStart,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingInline,scrollPaddingInlineEnd,scrollPaddingInlineStart,scrollPaddingX,scrollPaddingY,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollPaddingBottom,scrollSnapAlign,scrollSnapStop,scrollSnapType,scrollSnapStrictness,scrollSnapMargin,scrollSnapMarginTop,scrollSnapMarginBottom,scrollSnapMarginLeft,scrollSnapMarginRight,touchAction,userSelect,fill,stroke,strokeWidth,srOnly,debug,appearance,backfaceVisibility,clipPath,hyphens,mask,maskImage,maskSize,textSizeAdjust,colorPalette,textStyle,_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl\"\nvar userGenerated = userGeneratedStr.split(\",\");\nvar cssPropertiesStr = \"WebkitAppearance,WebkitBorderBefore,WebkitBorderBeforeColor,WebkitBorderBeforeStyle,WebkitBorderBeforeWidth,WebkitBoxReflect,WebkitLineClamp,WebkitMask,WebkitMaskAttachment,WebkitMaskClip,WebkitMaskComposite,WebkitMaskImage,WebkitMaskOrigin,WebkitMaskPosition,WebkitMaskPositionX,WebkitMaskPositionY,WebkitMaskRepeat,WebkitMaskRepeatX,WebkitMaskRepeatY,WebkitMaskSize,WebkitOverflowScrolling,WebkitTapHighlightColor,WebkitTextFillColor,WebkitTextStroke,WebkitTextStrokeColor,WebkitTextStrokeWidth,WebkitTouchCallout,WebkitUserModify,accentColor,alignContent,alignItems,alignSelf,alignTracks,all,animation,animationComposition,animationDelay,animationDirection,animationDuration,animationFillMode,animationIterationCount,animationName,animationPlayState,animationTimingFunction,animationTimeline,appearance,aspectRatio,azimuth,backdropFilter,backfaceVisibility,background,backgroundAttachment,backgroundBlendMode,backgroundClip,backgroundColor,backgroundImage,backgroundOrigin,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundRepeat,backgroundSize,blockOverflow,blockSize,border,borderBlock,borderBlockColor,borderBlockStyle,borderBlockWidth,borderBlockEnd,borderBlockEndColor,borderBlockEndStyle,borderBlockEndWidth,borderBlockStart,borderBlockStartColor,borderBlockStartStyle,borderBlockStartWidth,borderBottom,borderBottomColor,borderBottomLeftRadius,borderBottomRightRadius,borderBottomStyle,borderBottomWidth,borderCollapse,borderColor,borderEndEndRadius,borderEndStartRadius,borderImage,borderImageOutset,borderImageRepeat,borderImageSlice,borderImageSource,borderImageWidth,borderInline,borderInlineEnd,borderInlineColor,borderInlineStyle,borderInlineWidth,borderInlineEndColor,borderInlineEndStyle,borderInlineEndWidth,borderInlineStart,borderInlineStartColor,borderInlineStartStyle,borderInlineStartWidth,borderLeft,borderLeftColor,borderLeftStyle,borderLeftWidth,borderRadius,borderRight,borderRightColor,borderRightStyle,borderRightWidth,borderSpacing,borderStartEndRadius,borderStartStartRadius,borderStyle,borderTop,borderTopColor,borderTopLeftRadius,borderTopRightRadius,borderTopStyle,borderTopWidth,borderWidth,bottom,boxAlign,boxDecorationBreak,boxDirection,boxFlex,boxFlexGroup,boxLines,boxOrdinalGroup,boxOrient,boxPack,boxShadow,boxSizing,breakAfter,breakBefore,breakInside,captionSide,caret,caretColor,caretShape,clear,clip,clipPath,color,colorScheme,columnCount,columnFill,columnGap,columnRule,columnRuleColor,columnRuleStyle,columnRuleWidth,columnSpan,columnWidth,columns,contain,containIntrinsicSize,containIntrinsicBlockSize,containIntrinsicHeight,containIntrinsicInlineSize,containIntrinsicWidth,container,containerName,containerType,content,contentVisibility,counterIncrement,counterReset,counterSet,cursor,direction,display,emptyCells,filter,flex,flexBasis,flexDirection,flexFlow,flexGrow,flexShrink,flexWrap,float,font,fontFamily,fontFeatureSettings,fontKerning,fontLanguageOverride,fontOpticalSizing,fontPalette,fontVariationSettings,fontSize,fontSizeAdjust,fontSmooth,fontStretch,fontStyle,fontSynthesis,fontVariant,fontVariantAlternates,fontVariantCaps,fontVariantEastAsian,fontVariantEmoji,fontVariantLigatures,fontVariantNumeric,fontVariantPosition,fontWeight,forcedColorAdjust,gap,grid,gridArea,gridAutoColumns,gridAutoFlow,gridAutoRows,gridColumn,gridColumnEnd,gridColumnGap,gridColumnStart,gridGap,gridRow,gridRowEnd,gridRowGap,gridRowStart,gridTemplate,gridTemplateAreas,gridTemplateColumns,gridTemplateRows,hangingPunctuation,height,hyphenateCharacter,hyphenateLimitChars,hyphens,imageOrientation,imageRendering,imageResolution,imeMode,initialLetter,initialLetterAlign,inlineSize,inputSecurity,inset,insetBlock,insetBlockEnd,insetBlockStart,insetInline,insetInlineEnd,insetInlineStart,isolation,justifyContent,justifyItems,justifySelf,justifyTracks,left,letterSpacing,lineBreak,lineClamp,lineHeight,lineHeightStep,listStyle,listStyleImage,listStylePosition,listStyleType,margin,marginBlock,marginBlockEnd,marginBlockStart,marginBottom,marginInline,marginInlineEnd,marginInlineStart,marginLeft,marginRight,marginTop,marginTrim,mask,maskBorder,maskBorderMode,maskBorderOutset,maskBorderRepeat,maskBorderSlice,maskBorderSource,maskBorderWidth,maskClip,maskComposite,maskImage,maskMode,maskOrigin,maskPosition,maskRepeat,maskSize,maskType,masonryAutoFlow,mathDepth,mathShift,mathStyle,maxBlockSize,maxHeight,maxInlineSize,maxLines,maxWidth,minBlockSize,minHeight,minInlineSize,minWidth,mixBlendMode,objectFit,objectPosition,offset,offsetAnchor,offsetDistance,offsetPath,offsetPosition,offsetRotate,opacity,order,orphans,outline,outlineColor,outlineOffset,outlineStyle,outlineWidth,overflow,overflowAnchor,overflowBlock,overflowClipBox,overflowClipMargin,overflowInline,overflowWrap,overflowX,overflowY,overscrollBehavior,overscrollBehaviorBlock,overscrollBehaviorInline,overscrollBehaviorX,overscrollBehaviorY,padding,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingBottom,paddingInline,paddingInlineEnd,paddingInlineStart,paddingLeft,paddingRight,paddingTop,page,pageBreakAfter,pageBreakBefore,pageBreakInside,paintOrder,perspective,perspectiveOrigin,placeContent,placeItems,placeSelf,pointerEvents,position,printColorAdjust,quotes,resize,right,rotate,rowGap,rubyAlign,rubyMerge,rubyPosition,scale,scrollbarColor,scrollbarGutter,scrollbarWidth,scrollBehavior,scrollMargin,scrollMarginBlock,scrollMarginBlockStart,scrollMarginBlockEnd,scrollMarginBottom,scrollMarginInline,scrollMarginInlineStart,scrollMarginInlineEnd,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingBottom,scrollPaddingInline,scrollPaddingInlineStart,scrollPaddingInlineEnd,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollSnapAlign,scrollSnapCoordinate,scrollSnapDestination,scrollSnapPointsX,scrollSnapPointsY,scrollSnapStop,scrollSnapType,scrollSnapTypeX,scrollSnapTypeY,scrollTimeline,scrollTimelineAxis,scrollTimelineName,shapeImageThreshold,shapeMargin,shapeOutside,tabSize,tableLayout,textAlign,textAlignLast,textCombineUpright,textDecoration,textDecorationColor,textDecorationLine,textDecorationSkip,textDecorationSkipInk,textDecorationStyle,textDecorationThickness,textEmphasis,textEmphasisColor,textEmphasisPosition,textEmphasisStyle,textIndent,textJustify,textOrientation,textOverflow,textRendering,textShadow,textSizeAdjust,textTransform,textUnderlineOffset,textUnderlinePosition,top,touchAction,transform,transformBox,transformOrigin,transformStyle,transition,transitionDelay,transitionDuration,transitionProperty,transitionTimingFunction,translate,unicodeBidi,userSelect,verticalAlign,viewTransitionName,visibility,whiteSpace,widows,width,willChange,wordBreak,wordSpacing,wordWrap,writingMode,zIndex,zoom,alignmentBaseline,baselineShift,clipRule,colorInterpolation,colorRendering,dominantBaseline,fill,fillOpacity,fillRule,floodColor,floodOpacity,glyphOrientationVertical,lightingColor,marker,markerEnd,markerMid,markerStart,shapeRendering,stopColor,stopOpacity,stroke,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,strokeWidth,textAnchor,vectorEffect\";\nvar allCssProperties = cssPropertiesStr.split(\",\").concat(userGenerated);\nvar properties = new Map(allCssProperties.map((prop) => [prop, true]));\nvar cssPropertySelectorRegex = /&|@/;\nvar isCssProperty = /* @__PURE__ */ memo((prop) => {\n  return properties.has(prop) || prop.startsWith(\"--\") || cssPropertySelectorRegex.test(prop);\n});\nexport {\n  allCssProperties,\n  isCssProperty\n};\nexport const splitCssProps = /* @__PURE__ */ (props) =>  splitProps(props, isCssProperty)", "import { isCssProperty } from './is-valid-prop.js';\n\nexport const defaultShouldForwardProp = (prop, variantKeys) => !variantKeys.includes(prop) && !isCssProperty(prop)\n\nexport const composeShouldForwardProps = (tag, shouldForwardProp) =>\n  tag.__shouldForwardProps__ && shouldForwardProp\n    ? (propName) => tag.__shouldForwardProps__(propName) && shouldForwardProp(propName)\n    : shouldForwardProp\n\nexport const composeCvaFn = (cvaA, cvaB) => {\n  if (cvaA && !cvaB) return cvaA\n  if (!cvaA && cvaB) return cvaB\n  if ((cvaA.__cva__ && cvaB.__cva__) || (cvaA.__recipe__ && cvaB.__recipe__)) return cvaA.merge(cvaB)\n  const error = new TypeError('Cannot merge cva with recipe. Please use either cva or recipe.')\n  TypeError.captureStackTrace?.(error)\n  throw error\n}\n\nexport const getDisplayName = (Component) => {\n  if (typeof Component === 'string') return Component\n  return Component?.displayName || Component?.name || 'Component'\n}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/components/component.tsx\"\n);\nimport.meta.hot.lastModified = \"1703568512784.7754\";\n}\n// REMIX HMR END\n\nimport { styled } from \"../../styled-system/jsx\";\n\ndeclare global {\n  namespace JSX {\n    export interface IntrinsicAttributes{\n      as?: string;\n    }\n  }\n}\n\nexport default styled(\"div\");\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/button.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/button.tsx\");\n  import.meta.hot.lastModified = \"1703623190316.8567\";\n}\n// REMIX HMR END\n\nimport { styled } from \"../../styled-system/jsx\";\nimport Component from \"./component\";\nexport default _c2 = styled(_c = props => <Component as=\"button\" {...props} />);\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$styled\");\n$RefreshReg$(_c2, \"%default%\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["variantKeys", "value", "StyledComponent"]
}
